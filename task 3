import random
import nltk
import spacy
from datetime import datetime


nlp = spacy.load("en_core_web_md")


nltk.download("punkt")


intents = {
    "greeting": ["hello", "hi", "hey", "good morning", "good evening"],
    "goodbye": ["bye", "goodbye", "see you", "take care"],
    "thanks": ["thanks", "thank you", "much appreciated"],
    "time": ["what time is it", "tell me the time", "current time"],
    "date": ["what is the date", "today's date", "current date"],
    "name": ["what is your name", "who are you", "tell me your name"],
}


responses = {
    "greeting": ["Hello!", "Hi there!", "Hey!", "Hi! How can I help you?"],
    "goodbye": ["Goodbye!", "See you later!", "Take care!"],
    "thanks": ["You're welcome!", "Anytime!", "Glad to help!"],
    "time": [datetime.now().strftime("Current time is %H:%M:%S")],
    "date": [datetime.now().strftime("Today's date is %Y-%m-%d")],
    "name": ["I am ChatBot, your assistant."],
    "fallback": ["Sorry, I didn't understand that.", "Can you rephrase that?"]
}


def get_intent(user_input):
    input_doc = nlp(user_input.lower())
    max_score = 0.0
    best_intent = None

    for intent, patterns in intents.items():
        for pattern in patterns:
            pattern_doc = nlp(pattern)
            score = input_doc.similarity(pattern_doc)
            if score > max_score:
                max_score = score
                best_intent = intent

    if max_score > 0.75:
        return best_intent
    else:
        return "fallback"


def chat():
    print(" ChatBot: Hello! Ask me anything. (type 'quit' to exit)")
    while True:
        user_input = input("You: ")
        if user_input.lower() in ["quit", "exit", "bye"]:
            print(" ChatBot:", random.choice(responses["goodbye"]))
            break

        intent = get_intent(user_input)
        print(" ChatBot:", random.choice(responses.get(intent, responses["fallback"])))


if __name__ == "__main__":
    chat()
